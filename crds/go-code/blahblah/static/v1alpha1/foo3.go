/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"fmt"
	// "k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BlahLister helps list Blahs.
type BlahLister interface {
	// List lists all Blahs in the indexer.
	List(selector labels.Selector) (ret []*Blah, err error)
	// Blahs returns an object that can list and get Blahs.
	Blahs(namespace string) BlahNamespaceLister
	BlahListerExpansion
}

// blahLister implements the BlahLister interface.
type blahLister struct {
	indexer cache.Indexer
}

// NewBlahLister returns a new BlahLister.
func NewBlahLister(indexer cache.Indexer) BlahLister {
	return &blahLister{indexer: indexer}
}

// List lists all Blahs in the indexer.
func (s *blahLister) List(selector labels.Selector) (ret []*Blah, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*Blah))
	})
	return ret, err
}

// Blahs returns an object that can list and get Blahs.
func (s *blahLister) Blahs(namespace string) BlahNamespaceLister {
	return blahNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BlahNamespaceLister helps list and get Blahs.
type BlahNamespaceLister interface {
	// List lists all Blahs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*Blah, err error)
	// Get retrieves the Blah from the indexer for a given namespace and name.
	Get(name string) (*Blah, error)
	BlahNamespaceListerExpansion
}

// blahNamespaceLister implements the BlahNamespaceLister
// interface.
type blahNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Blahs in the indexer for a given namespace.
func (s blahNamespaceLister) List(selector labels.Selector) (ret []*Blah, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*Blah))
	})
	return ret, err
}

// Get retrieves the Blah from the indexer for a given namespace and name.
func (s blahNamespaceLister) Get(name string) (*Blah, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, fmt.Errorf("did not find blah called %v (mark did this)", name)
	}
	return obj.(*Blah), nil
}
